swagger: '2.0'
info:
  version: '1.0'
  title: "HUBusivi"
  description: REST Api to manage the exams
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: ingegneriasoftwa2.herokuapp.com
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json 
paths:
  
  /students:
    post:
      tags: 
      - "Students"
      description: Adds a student on the database
      operationId: addStudent
      parameters:
        - name: badge number
          in: query
          description: badge number of student
          type: integer
          x-exaple: 128888
        - name: email
          in: query
          description: data of the student
          type: string
          x-example: "Pincopallino@gmail.com"
        - name: name
          in: query
          description: name of student
          type: string
          x-example: "Pinco"
        - name: password
          in: query
          description: password for the login
          type: string
          x-example: "Pallino"
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
    
  
  /students/studentId:
    get:
      description: Returns a student from the database by ID
      operationId: getStudent
      parameters:
        - name: id
          in: query
          description: if of the student
          type: integer
          x-example: 198888
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
     
    delete:
      description: Removes a student from the database
      operationId: removeStudent
      parameters:
        - name: badge_number
          in: query
          description: Badge number of student that I want to delete
          type: integer
          x-example: 1
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
  
  /teacher:
    post:
      tags:
      - "Teacher"
      description: Adds a teacher
      operationId: AddAssignment
      parameters:
        - name: ID
          in: query
          description: ID of teacher
          type: integer
          x-exaple: 128888
        - name: email
          in: query
          description: email of the teacher
          type: string
          x-example: "prof@gmail.com"
        - name: name
          in: query
          description: name of teacher
          type: string
          x-example: "Giorgio"
        - name: password
          in: query
          description: password for the login
          type: string
          x-example: "Pallino"
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
    get:
      description: Returns a teacher from the database by ID
      operationId: getTeacher
      parameters:
        - name: ID
          in: query
          description: ID of teacher
          type: integer
          x-example: 198888
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
    
  /teacher/teacherID:
    get:
        description: Returns a teacher from the database by ID
        operationId: getSpecTeacher
        parameters:
          - name: teacherID
            in: query
            description: teacher ID
            type: integer
            x-example: 1
        responses:
          400:
            description: Bad request
          404:
            description: Resources not found
          200:
            description: Successful response
    
    delete:
      description: Removes a teacher from the database
      operationId: RemoveTeacher
      parameters:
        - name: teacherID
          in: query
          description: ID of teacher that I want to delete
          type: integer
          x-example: 1
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
  
  /assignment:
    post: 
        tags: 
        - "Assignment"
        description: Adds an Assignment(only teacher)
        operationId: addAssignment
        parameters:
          - name: assignmentId 
            in: query
            description: id of the assignment
            type: string
            x-example: "Compito Gennaio"
          - name: Delivery date
            in: query
            description: Delivery date of assignment
            type: string
            x-example: "12/12/2018"
          - name: Expire date
            in: query
            description: Expire date of assignment
            type: string
            x-example: "12/12/2018"
          - name: courseId
            in: query
            description: id of the course
            type: string
            x-example: "186495"
        responses:
          400:
            description: Bad request
          404:
            description: Resources not found
          200:
            description: Successful response

  /assignment/assignmentId:  
    delete:
      description: Removes an assignment
      operationId: removeAssignment
      parameters:
        - name: assignmentId
          in: query
          description: name of assignment
          type: string
          x-example: "124354"
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response  
  
    put:
      description: Updates an assignment
      operationId: updateAssignment
      parameters:
          - name: assignmentId 
            in: query
            description: id of the assignment
            type: string
            x-example: "Compito Gennaio"
          - name: Delivery date
            in: query
            description: Delivery date of assignment
            type: string
            x-example: "12/12/2018"
          - name: Expire date
            in: query
            description: Expire date of assignment
            type: string
            x-example: "12/12/2018"
          - name: courseId
            in: query
            description: id of the course
            type: string
            x-example: "186495"
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
          
  
  /marks:
    post:
      tags:
      - "Marks"
      description: Adds a Mark (only teacher)
      operationId: addMark
      parameters:
        - name: value
          in: query
          description: voto da aggiungere
          type: integer
          x-example: 22
        - name: matricola
          in: query
          description: matricola of the student 
          type: integer
          x-example: 123456
        - name: course_id
          in: query
          description: course id of the mark
          type: integer
          x-example: 113355
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
    
    delete:
      description: Removes a Mark of a specific exam of a student (only teacher)
      operationId: removeMark
      parameters:
        - name: matricola
          in: query
          description: matricola of the student
          type: integer
          x-example: 123456
        - name: course_id
          in: query
          description: course id of the mark
          type: integer
          x-example: 113355
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response

    put:
      description: Updates a mark of a specific exam of a student (only teacher)
      operationId: updateMark
      parameters:
        - name: value
          in: query
          description: mark to update
          type: integer
          x-example: 22
        - name: matricola
          in: query
          description: matricola of the student
          type: integer
          x-example: 123456
        - name: course_id
          in: query
          description: course id of the mark
          type: integer
          x-example: 113355
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
  
  /marks/courseId:
    get:
      description: Gets your marks of a specific course
      operationId: getMark
      parameters:
        - name: matricola
          in: query
          description: matricola of the student
          type: integer
          x-example: 123456
        - name: course_id
          in: query
          description: course id of the mark
          type: integer
          x-example: 113355
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
          
  /marks/avg:
    post:
      description: >-
        Calculates the marks average about a specific exam of a course(only teacher).
      operationId: avgMark
      parameters:
        - name: course_id
          in: query
          description: Course which I want to get the average of marks
          type: integer
          x-example: 113355
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Marks average
          
  
  /courses:
    put:
      description: Adds a course(teacher)/Join a course(student)
      operationId: addCourse
      parameters:
        - name: courseID
          in: query
          description: course data
          type: string
          x-example: 'Ingegneria del software 2'
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
  
    get:
      tags:
      - "Courses"
      description: Gets the list of all your courses
      operationId: coursesList
      parameters:
        - name: matricola
          in: query
          description: matricola of the user
          type: integer
          x-example: 123456
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: List of all your courses


  /courses/courseId:  
    delete:
      description: Removes a course(teacher only)/Leave a course(student only)
      operationId: removeCourse
      parameters:
        - name: coursID
          in: query
          description: Course which I want delete/leave
          type: integer
          x-example: 113355
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response
  
    put:
      description: Updates a Course(teacher only)
      operationId: updateCourse
      parameters:
        - name: course info
          in: query
          description: course info
          type: string
          x-example: 'Ingegneria del software - 2'
        - name: course_id
          in: query
          description: course id
          type: integer
          x-example: 113355
      responses:
        400:
          description: Bad request
        404:
          description: Resources not found
        200:
          description: Successful response